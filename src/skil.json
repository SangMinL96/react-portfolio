{
  "data": [
    {
      "id": "1",
      "title": "HTML",
      "Level": 90,
      "logo": "https://i.imgur.com/PrxhsLb.png",
      "skilTag": "<HTML> <div></div> </HTML>",
      "Summary": "HTML은 마크업 언어로써 비록 프로그래밍 언어는 아니지만 웹사이트를 만드는 가장 기초적인 요소라고 생각합니다. 저는 처음 프론트엔드를 공부를 할 때 HTML를 배우고 제가 작성한 것이 눈앞에서 변화하는 것을 보고 큰 재미를 느꼈습니다. 구글, 유튜브 등 많은 글을 보고 무작정 div를 사용하여 마크업을 하는 것보다 상황에 맞는 여러 가지의 태그를 사용하여 작성을 해야 다른 개발자가 봤을 때 가독성이 편하고 나중에 코드가 길어졌을 때 찾기도 편하다고 느꼈습니다. 다양한 태그를 사용하여 이쁘고 좋은 HTML를 작성하도록 노력하겠습니다."
    },
    {
      "id": "2",
      "title": "CSS",
      "Level": 90,
      "logo": "https://i.imgur.com/P7EhRSK.png",
      "skilTag": ".css{ display:flex; position:absolute; }",
      "Summary": "개인적으로 구글의 홈페이지 디자인을 참고하여 홈페이지 마크업를 할 때 대부분을 Flex을 이용한 레이아웃, 포지션, 적절한 선택자를 이용하여 트랜지션, 애니메이션 등 막힘없이 구현해낼 수 있다고 생각합니다. 최근 CSS의 중요성도 많이 높아졌고 홈페이지를 마크업 할 때 세심한 CSS 작업이 홈페이지를 더욱 멋있고 이쁘게 만든다고 생각합니다. 구현이 안 될 때는 개발자 도구를 사용하여 문제점을 찾고 바로 수정을 할 수 있는 능력을 가지고 있다고 생각합니다."
    },
    {
      "id": "3",
      "title": "JAVA SCRIPS",
      "Level": 80,
      "logo": "https://i.imgur.com/db0qkao.png",
      "skilTag": "<script src=js/main.js></script>",
      "Summary": "자바스크립트를 처음 공부할 때 생활코딩을 여러 번 반복하여 공부를 하였습니다. 하지만 생활코딩 강의는 조금은 오래된 강의라 ES6를 기반으로 한 화살표 함수 배열 함수 등 최신 문법들이 많이 생략이 되어있었습니다. 최신 문법을 갑자기 사용을 하니 익숙하지 않았습니다. 하지만 계속 사용하여 익숙해졌고 앞으로 빠르게 발전하는 자바스크립트 새로운 문법을 두려워하지 않고 적극적으로 배우겠습니다. CSS로는 할 수 없는 슬라이더, 스크롤 이벤트, 드롭 다운 등 DOM을 선택, 이용한 디자인들을 자유롭게 구현이 가능합니다. 저는 꾸준히 console.log를 사용하여 확인하면서 코딩을 하는 스타일입니다. 사용 가능한 프레임워크는 React입니다. 관심 있는 프레임워크는 Vue.js이고 빨리 배워보고 싶은 프레임워크입니다. "
    },
    {
      "id": "4",
      "title": "REACT",
      "Level": 70,
      "logo": "https://i.imgur.com/UWThTai.png",
      "skilTag": "import React,{useState,useEffect} from react",
      "Summary": "저의 처음 자바스크립트 프레임워크 React를 사용하여 컴포넌트를 이용한 복잡한 구조들을 잘 정리할 수 있다는 장점을 느꼈고 또한 쉽게 재사용을 할 수 있다는 것을 느꼈습니다. 컴포넌트 간의 Props를 자유자재로 이용할 수 있습니다. useState Hooks를 사용하여 상태 관리를 자유롭게 할 수 있고 여러 가지 프로젝트를 진행하면서 많은 Hooks를 사용했습니다. Router-dom을 사용하여 SPA를 능숙하게 구현해낼 수 있고 withRouter를 사용하여 여러 컴포넌트에서 자유자재로 history등 사용이 가능합니다. 최근 개인 프로젝트를 만들때 React를 사용하여 프론트엔드에서 재사용성을 생각하며 마크업을 하는 것이 제법 익숙해졌습니다. 하지만 아직까지 렌더링 최적화를 하는 것은 익숙하지 않고 꾸준히 공부를 하여 렌더링 최적화도 능숙하게 할 수 있도록 노력하겠습니다. "
    },
    {
      "id": "5",
      "title": "React Native",
      "Level": 60,
      "logo": "https://i.imgur.com/UWThTai.png",
      "skilTag": "import React,{useState,useEffect} from react-native",
      "Summary": "웹이 아닌 앱 ReactNative를 Expo 사용하여 실제 스마트폰과 연동을 하여 프로젝트를 진행했습니다.공부하면서 Router 부분에서 차이를 느꼈습니다.  Router을 대신하여 React-Navigation을 사용을 한다는 것에 차이를 느꼈고 신기했던 점은 React-Navigation에 애니메이션이 내장이 되어있어 정말 좋은 라이브러리라고 생각했습니다. React로 만들어 보았던 영화 웹을 ReactNative를 사용하여 프로젝트를 한번 만들어 보았고 아직까지는 모르는 기능들이 많다고 생각하기 때문에 공부의 필요성을 느끼고 있습니다."
    },
    {
      "id": "6",
      "title": "REST API",
      "skilTag": "const = async () => {try { await } catch };",
      "logo": "https://i.imgur.com/RVaboxy.png",
      "Level": 70,
      "Summary": "https://developers.themoviedb.org라는 JSON 형식의 URL 영화 API를 이용하여 프로젝트를 진행하여 API를 사용하는 것이 익숙해졌습니다. API 리스트를 가져와 배열 함수를 사용하여 마크업을 해보았고 해당 리스트를 클릭하여 디테일한 화면을 보기 위해 클릭한 리스트 ID를 찾아 API를 가져오는 등 여러 가지 기능들을 만들어보았습니다. React를 사용할 때 Axios, async, await를 이용하여 미리 useReducer를 이용해 GET 하는 방법과 하나의 파일을 만들어 여러 가지 함수를 작성하여 export, import 하는 방식을 사용하여 사용을 해보았습니다. 또한 try, catch 이용하여 오류를 잡아내는것이 중요하다고 생각하여 중요시 여기고 있습니다."
    },
    {
      "id": "7",
      "title": "GraphQL",
      "Level": 35,
      "logo": "https://i.imgur.com/bcB4eQ1.png",
      "skilTag": "const { data, loading } = useQuery( );",
      "Summary": "JSON 형식의 URL API를 연동하여 사용해보았고 GraphQL를 이용하여 서버 API를 만드는 것이 아직까지는 익숙하지 않지만 만든 후 프론트엔드 작업을 할 때 자신이 원하는 것만 불러올 수 있기 때문에 사용하기 편했습니다. 아직까지 GraphQL를 이용해 서버 API를 만드는 것은 미숙하지만 프론트엔드에서 원하는 API를 불러와 사용하는 것은 능숙하다고 생각합니다."
    },
    {
      "id": "8",
      "title": "Styled Component",
      "Level": 75,
      "logo": "https://i.imgur.com/uyFM8bq.png",
      "skilTag": "const styled = styled.div``; ",
      "Summary": "React를 사용할 때 기본적으로 StyledComponent를 사용하여 CSS를 작성합니다. 컴포넌트에 Props를 받아와 사용하는 것이 능숙하고 Sass, CSS Module 등 사용을 해보았지만 StyledComponent는 자바스크립트 파일 안에서 작성하는 것에 여러 파일을 작성하는 번거로움이 없기 때문에 쭉 사용해왔습니다. StyledComponent를 사용할 때 태그 사용이 소홀해질 수도 있지만 여러 가지 태그를 사용할 수 있도록 노력하고 있습니다."
    }
  ]
}
